Blurb::
(Deprecated keyword) Augments an existing random sampling study

Description::
This keyword is deprecated.  Instead specify \c sample_type \c random
with \c refinement_samples.

An incremental random sampling approach will augment an existing
random sampling study with refinement_samples to get better estimates of
mean, variance, and percentiles.  There is no constraint on the number
of samples in the second or subsequent sets as there is with
incremental LHS.  

Typically, this approach is used when you have an initial study with
sample size N1 and you want to perform an additional N2 samples.
Ideally, a Dakota restart file containing the initial N1 samples, so
only N2 (instead of N1 + N2) potentially expensive function
evaluations will be performed.

<b> Usage Tips </b>

The incremental approach is useful if it is uncertain how many
simulations can be completed within available time.

Topics::	
Examples::

Suppose an initial study is conducted using \c sample_type \c random
with \c samples = 50.  A follow-on study uses a new input file where
\c samples = 50, and \c refinement_samples = 10, resulting in 50
reused samples (from restart) and 10 new random samples.  The 10 new
samples will be combined with the 50 previous samples to generate a
combined sample of size 60 for the analysis.

The method block for the incremented study input60.in would be the
following:
\verbatim
method
  sampling
    seed = 1337
    sample_type incremental_random
    samples = 50
      refinement_samples = 10
\endverbatim
The syntax for
running the second sample set night be: 
\verbatim 
dakota -i input60.in -r dakota.50.rst
\endverbatim
where \c dakota.50.rst is the restart file containing the results of the
previous study. A value for \c seed should be specified and must match
in the initial and incremental studies to ensure that the generated samples
are the same.

Theory::
Faq::
See_Also::	
